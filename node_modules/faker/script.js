const sql = require('mssql');
const faker = require('faker'); // faker.js para generar datos ficticios

// Configuración de la conexión a SQL Server
const config = {
  user: '', // Usuario de SQL Server (puede ser vacío si usas autenticación integrada)
  password: '', // Contraseña (puede ser vacío si usas autenticación integrada)
  server: 'DESKTOP-COFBV0T\SQLSENA', // Nombre del servidor (o la IP)
  database: 'Empresa', // Cambia por el nombre de tu base de datos
  options: {
    trustServerCertificate: true, // Solo necesario si estás trabajando en local
    encrypt: false // Desactiva si no necesitas encriptación (para entornos de desarrollo)
  }
};

// Conectar a la base de datos
sql.connect(config).then(() => {
  console.log('Conexión a SQL Server establecida correctamente.');

  // Función para generar y guardar empleados ficticios
  function generarEmpleados(cantidad) {
    for (let i = 0; i < cantidad; i++) {
      // Generar datos ficticios para un empleado
      const nombre = faker.name.firstName();
      const puesto = faker.name.jobTitle();
      const salario = faker.finance.amount(30000, 100000, 2); // Salario entre 30,000 y 100,000 con 2 decimales

      // Insertar el empleado en la base de datos
      const query = `INSERT INTO Empleados (IdEmpleado, Nombre, Puesto, Salario) 
                     VALUES (@idEmpleado, @nombre, @puesto, @salario)`;

      const request = new sql.Request();
      const idEmpleado = i + 1; // Generar ID secuencial para el empleado

      request.input('idEmpleado', sql.Int, idEmpleado);
      request.input('nombre', sql.VarChar(50), nombre);
      request.input('puesto', sql.VarChar(50), puesto);
      request.input('salario', sql.Decimal(10, 2), salario);

      request.query(query, (err, result) => {
        if (err) {
          console.error('Error insertando empleado: ' + err);
        } else {
          console.log(`Empleado ${nombre} insertado con éxito`);
        }
      });
    }
  }

  // Llamada a la función para generar e insertar empleados (por ejemplo, 10 empleados)
  generarEmpleados(10);

}).catch(err => {
  console.error('Error conectando a SQL Server: ' + err);
});
